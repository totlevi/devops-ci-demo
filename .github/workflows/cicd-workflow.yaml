name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn clean install
      - name: Build Docker Image
        run: docker build -t ghcr.io/dafessor/devops-ci-demo/devops-ci-demo-img:latest .
      - name: Push Docker Image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/dafessor/devops-ci-demo/devops-ci-demo-img:latest

  deploy-to-minikube:
    name: Deploy to Minikube
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Minikube
        uses: dawidd6/action-setup-minikube@v2
        with:
          driver: docker
      - name: Install kubectl
        uses: azure/setup-kubectl@v1
      - name: Configure Docker to use Minikube's Daemon
        run: |
          minikube start
          eval $(minikube -p minikube docker-env)
      - name: Load Docker image into Minikube
        run: |
          docker tag ghcr.io/dafessor/devops-ci-demo/devops-ci-demo-img:latest minikube/devops-ci-demo-img:latest
          docker images
      - name: Apply Kubernetes Deployment and Service
        run: |
          kubectl apply -f k8s/devops-ci-demo-deployment.yaml
          kubectl apply -f k8s/devops-ci-demo-service.yaml
      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/devops-ci-demo devops-ci-demo=minikube/devops-ci-demo-img:latest
      - name: Check Deployment Status
        run: kubectl rollout status deployment/devops-ci-demo

